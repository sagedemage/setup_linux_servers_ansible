---

- hosts: all
  become: true
  pre_tasks:

    - name: update repository index (CentOS)
      tags: always
      dnf:
        update_cache: yes
      changed_when: false
      when: ansible_distribution == "CentOS"
      
    - name: update repository index (Ubuntu)
      tags: always
      apt:
        update_cache: yes
      changed_when: false
      when: ansible_distribution == "Ubuntu"

- hosts: web_servers
  become: true
  tasks:
      
    - name: install apache and php packages (CentOS)
      tags: apache,centos,httpd
      dnf:
        name:
          - httpd
          - php
        state: latest
      when: ansible_distribution == "CentOS"

    - name: start and enable httpd (CentOS)
      tags: apache,centos,httpd
      service:
        name: httpd
        state: started
        enabled: yes
      when: ansible_distribution == "CentOS"

    - name: configure the firewall to allow port 80 (CentOS)
      tags: apache,centos,httpd
      firewalld:
        port: 80/tcp
        permanent: true
        immediate: true
        state: enabled
      when: ansible_distribution == "CentOS"

    - name: install apache2 and php packages (Ubuntu)
      tags: apache,apache2,ubuntu
      apt:
        name:
          - apache2
          - libapache2-mod-php
        state: latest
      when: ansible_distribution == "Ubuntu"

    - name: change the log level (CentOS)
      tags: apache,centos,httpd
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        regexp: "^LogLevel"
        line: LogLevel error
      when: ansible_distribution == "CentOS"
      register: httpd

    - name: restart httpd (CentOS)
      tags: apache,centos,httpd
      service:
        name: httpd
        state: restarted
      when: httpd.changed

    - name: copy html file for the site
      tags: apache,apache2,httpd
      copy:
        src: default_site.html
        dest: /var/www/html/index.html
        owner: root
        group: root
        mode: 0644 # allows you to read and write to a file or directory and other users can only read it.

- hosts: db_servers
  become: true
  tasks:

    - name: install mariadb package (CentOS)
      tags: centos,db,mariadb
      dnf:
        name: mariadb
        state: latest
      when: ansible_distribution == "CentOS"

    - name: install mariadb server package (Ubuntu)
      tags: db,mariadb,ubuntu
      apt:
        name: mariadb-server
        state: latest
      when: ansible_distribution == "Ubuntu"

- hosts: file_servers
  become: true
  tasks:

    - name: install samba package
      tags: samba
      package:
        name: samba
        state: latest

- hosts: nginx_servers
  become: true
  vars:
    home_path: "/home/sage"
  tasks:

    - name: install dependencies
      tags: nginx,centos
      dnf:
        name:
          - gcc
          - make
          - pcre2-devel
          - zlib-devel
          - openssl-devel
        state: latest
      when: ansible_distribution == "CentOS"

    - name: create nginx directory
      tags: nginx,centos
      file:
        path: "{{ home_path }}/nginx-1.28.0"
        state: directory
        mode: "0755"
      when: ansible_distribution == "CentOS"

    - name: extract Nginx source code
      tags: nginx,centos
      unarchive:
        src: https://github.com/nginx/nginx/releases/download/release-1.28.0/nginx-1.28.0.tar.gz
        dest: "{{ home_path }}"
        remote_src: yes
      when: ansible_distribution == "CentOS"

    - name: Check if nginx is installed
      command: ls /usr/local/nginx/sbin/nginx
      when: ansible_distribution == "CentOS"
      register: nginx_binary_path
      changed_when: False

    - name: run configure script
      tags: nginx,centos
      shell: ./configure
      args:
        chdir: "{{ home_path }}/nginx-1.28.0"
      when: ansible_distribution == "CentOS" and nginx_binary_path.stdout != "/usr/local/nginx/sbin/nginx"

    - name: build the default target
      tags: nginx,centos
      make:
        chdir: "{{ home_path }}/nginx-1.28.0"
      when: ansible_distribution == "CentOS" and nginx_binary_path.stdout != "/usr/local/nginx/sbin/nginx"

    - name: run 'install' target as root
      tags: nginx,centos
      make:
        chdir: "{{ home_path }}/nginx-1.28.0"
        target: install
        params:
          NUM_THREADS: 2
      become: yes
      when: ansible_distribution == "CentOS" and nginx_binary_path.stdout != "/usr/local/nginx/sbin/nginx"

